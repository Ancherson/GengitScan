gitrawdata s'occupe de parcourir les log des commits pour en créer des objects de type commit facile à manipuler qui pourront ensuite être traité par le reste du programme.

visulog/gitrawdata/src/main/java/up/visulog/gitrawdata :

Classe Commit :

Cette classe permet de générer des objets commit à partir de log.

attribut :

String id, String date, String author, String description, String mergedFrom

Constructeur(id author date description mergedfrom)

methodes :

- parseLogFromCommand(Path) :
crée un processBuilder, appel la méthode builder.start() et si pas d'erreur renvoie un type "List<Commit>"

-public static Optional<Commit> parseCommit(BufferedReader input) :
parcours un objet de type log et renvoie un objet commit

-@override toString() :
Renvoie un String de l'objet commit de manière lisible en indiquant ses attributs.


3 TODO

1 FIXME

classe CommitBuilder :

Cette classe permet de construire des commit

attribut : String id; String author; String date; String description; String mergedFrom

Contructeur : CommitBuilder(String id)

methodes: 

Setter : author, date, description, mergedFrom

createCommit() : crée un nouveau Objet Commit à partir des arguments.

~/visulog/gitrawdata/src/test/java/up/visulog/gitrawdata

testeCommit.java :

Classe test, simule la création de commit.
